{"version":3,"file":"js/757.b4e7f54b.js","mappings":"kOACGA,EAAAA,EAAAA,IAOM,aANHC,EAAAA,EAAAA,GAAmG,eAFzGC,EAAAA,EAAAA,IAEa,WAAM,SAAAD,EAAAA,EAAAA,GAA8E,SAAtEE,IAAKC,EAAAC,MAAM,SAFtC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAEyDC,EAAAC,mBAAmBC,MAAKH,GAAEI,KAAK,Q,iBAA/BH,EAAAC,mBAAmBC,YACtET,EAAAA,EAAAA,GAAkG,eAHxGC,EAAAA,EAAAA,IAGa,UAAK,SAAAD,EAAAA,EAAAA,GAA8E,SAAtEE,IAAKC,EAAAC,MAAM,QAHrC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAGuDC,EAAAC,mBAAmBG,KAAIL,GAAEI,KAAK,U,iBAA9BH,EAAAC,mBAAmBG,WACpEX,EAAAA,EAAAA,GAAkG,eAJxGC,EAAAA,EAAAA,IAIa,UAAK,SAAAD,EAAAA,EAAAA,GAA8E,SAAtEE,IAAKC,EAAAC,MAAM,QAJrC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAIuDC,EAAAC,mBAAmBI,KAAIN,GAAEI,KAAK,U,iBAA9BH,EAAAC,mBAAmBI,WACpEZ,EAAAA,EAAAA,GAAmG,eALzGC,EAAAA,EAAAA,IAKa,WAAM,SAAAD,EAAAA,EAAAA,GAA8E,SAAtEE,IAAKC,EAAAC,MAAM,SALtC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAKyDC,EAAAC,mBAAmBK,MAAKP,GAAEI,KAAK,Q,iBAA/BH,EAAAC,mBAAmBK,WACvDV,EAAAW,YAA0C,WACzDf,EAAAA,EAAAA,IAAqD,UAP3DgB,IAAA,EAOsBC,QAAKX,EAAA,KAAAA,EAAA,OAAAY,IAAEd,EAAAe,iBAAAf,EAAAe,mBAAAD,KAAiB,WADhB,WAAxBlB,EAAAA,EAAAA,IAAkE,UANxEgB,IAAA,EAMiCC,QAAKX,EAAA,KAAAA,EAAA,GAAAC,GAAEH,EAAAgB,kBAAiB,Y,oBAOzD,GACGC,KAAM,sBACNC,IAAAA,GACG,MAAO,CACJC,UAAW,GACXd,mBAAoB,CACjBC,MAAO,KACPE,KAAM,KACNC,KAAM,KACNC,MAAO,MAGhB,EACAU,SAAU,KACJC,EAAAA,EAAAA,IAAW,CAAC,mBACfV,SAAAA,GACG,OAAOW,KAAKC,OAAOC,OAAOb,SAC7B,GAEHc,OAAAA,GACOH,KAAKX,YAAWW,KAAKjB,mBAAqBiB,KAAKI,eAAeJ,KAAKX,WAC1E,EACAgB,QAAS,KACHC,EAAAA,EAAAA,IAAW,CAAC,aAAc,kBAC7BZ,aAAAA,GACOM,KAAKO,qBACNP,KAAKQ,WAAW,CACbC,IAAI,IAAIC,MAAOC,iBACZX,KAAKjB,qBAEXiB,KAAKY,eAEX,EACAA,YAAAA,GACGZ,KAAKa,QAAQC,KAAK,CACfnB,KAAM,QAEZ,EACAY,gBAAAA,GACG,IAAK,MAAMjB,KAAOU,KAAKjB,mBACpB,IAAKiB,KAAKjB,mBAAmBO,GAE1B,OADAU,KAAKV,GAAKyB,SACH,EAGb,OAAO,CACV,EACApC,KAAAA,CAAMW,GACH,OAAQ0B,IACLhB,KAAKV,GAAO0B,CAAC,CAEnB,EACAvB,eAAAA,GACOO,KAAKO,qBACNP,KAAKiB,cAAcjB,KAAKjB,oBACxBiB,KAAKY,eAEX,I,QCjEN,MAAMM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://on-lesson2/./src/components/CompanySettingsPage.vue","webpack://on-lesson2/./src/components/CompanySettingsPage.vue?78fc"],"sourcesContent":["<template>\r\n   <div>\r\n      <label>Title <input :ref=\"onRef('title')\" v-model=\"newCompanySettings.title\" type=\"text\" /></label>\r\n      <label>Rate <input :ref=\"onRef('rate')\" v-model=\"newCompanySettings.rate\" type=\"number\" /></label>\r\n      <label>Year <input :ref=\"onRef('year')\" v-model=\"newCompanySettings.year\" type=\"number\" /></label>\r\n      <label>Owner <input :ref=\"onRef('owner')\" v-model=\"newCompanySettings.owner\" type=\"text\" /></label>\r\n      <button v-if=\"!companyId\" @click=\"addNewCompany()\">create</button>\r\n      <button v-else @click=\"onUpdateCompany\">save</button>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nexport default {\r\n   name: 'CompanySettingsPage',\r\n   data() {\r\n      return {\r\n         inputItem: [],\r\n         newCompanySettings: {\r\n            title: null,\r\n            rate: null,\r\n            year: null,\r\n            owner: null,\r\n         },\r\n      }\r\n   },\r\n   computed: {\r\n      ...mapGetters(['getCompanyById']),\r\n      companyId() {\r\n         return this.$route.params.companyId\r\n      },\r\n   },\r\n   created() {\r\n      if (this.companyId) this.newCompanySettings = this.getCompanyById(this.companyId)\r\n   },\r\n   methods: {\r\n      ...mapActions(['addCompany', 'updateCompany']),\r\n      addNewCompany() {\r\n         if (this.checkCompanyData()) {\r\n            this.addCompany({\r\n               id: new Date().getFullYear(),\r\n               ...this.newCompanySettings,\r\n            })\r\n            this.goOnHomePage()\r\n         }\r\n      },\r\n      goOnHomePage() {\r\n         this.$router.push({\r\n            name: 'home',\r\n         })\r\n      },\r\n      checkCompanyData() {\r\n         for (const key in this.newCompanySettings) {\r\n            if (!this.newCompanySettings[key]) {\r\n               this[key].focus()\r\n               return false\r\n            }\r\n         }\r\n         return true\r\n      },\r\n      onRef(key) {\r\n         return (el) => {\r\n            this[key] = el\r\n         }\r\n      },\r\n      onUpdateCompany() {\r\n         if (this.checkCompanyData()) {\r\n            this.updateCompany(this.newCompanySettings)\r\n            this.goOnHomePage()\r\n         }\r\n      },\r\n   },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { render } from \"./CompanySettingsPage.vue?vue&type=template&id=83842e12\"\nimport script from \"./CompanySettingsPage.vue?vue&type=script&lang=js\"\nexport * from \"./CompanySettingsPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createElementVNode","_createTextVNode","ref","$options","onRef","_cache","$event","$data","newCompanySettings","title","type","rate","year","owner","companyId","key","onClick","args","onUpdateCompany","addNewCompany","name","data","inputItem","computed","mapGetters","this","$route","params","created","getCompanyById","methods","mapActions","checkCompanyData","addCompany","id","Date","getFullYear","goOnHomePage","$router","push","focus","el","updateCompany","__exports__","render"],"sourceRoot":""}